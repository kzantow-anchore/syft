name: "Release"
on:
  push:
    # take no actions on push to any branch...
    branches-ignore:
      - "**"
    # ... only act on release tags
    tags:
      - "v*"

env:
  GO_VERSION: "1.16.x"

jobs:
  release:
    runs-on: macos-latest # Due to our code signing process, it's vital that we run our release steps on macOS.
    steps:
      - uses: docker-practice/actions-setup-docker@v1

      # note, it is important to always be auth'd into docker.io to prevent rate limiting issues
      - name: Login to Docker Hub
        run: echo ${{ secrets.TOOLBOX_DOCKER_PASS }} | docker login docker.io -u ${{ secrets.TOOLBOX_DOCKER_USER }} --password-stdin

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore tool cache
        id: tool-cache
        uses: actions/cache@v2.1.3
        with:
          path: ${{ github.workspace }}/.tmp
          key: ${{ runner.os }}-tool-${{ hashFiles('Makefile') }}

      - name: Restore go cache
        id: go-cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: (cache-miss) Bootstrap all project dependencies
        if: steps.tool-cache.outputs.cache-hit != 'true' || steps.go-cache.outputs.cache-hit != 'true'
        run: make bootstrap

      - uses: kzantow-anchore/sbom-action@find-draft-releases
        with:
          artifact-name: sbom.spdx.json

      - name: Build & publish release artifacts
        run: make release

      - uses: kzantow-anchore/sbom-action/publish-sbom@find-draft-releases

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,workflow,action,eventName
          text: "A new Syft release is ready to be manually published: https://github.com/anchore/syft/releases"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TOOLBOX_WEBHOOK_URL }}
        if: ${{ success() }}

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist/**/*
